Function FindMaxDifferenceSmallerElements(arr):
    n = length of arr
    
    // Arrays to store smaller elements on left and right
    leftSmaller = new Array(n)
    rightSmaller = new Array(n)
    
    // For leftmost element, no smaller element on left
    leftSmaller[0] = 0
    
    // Find smaller elements on left
    for i = 1 to n-1:
        if arr[i-1] < arr[i]:
            leftSmaller[i] = arr[i-1]
        else:
            leftSmaller[i] = leftSmaller[i-1]
    
    // For rightmost element, no smaller element on right
    rightSmaller[n-1] = 0
    
    // Find smaller elements on right
    for i = n-2 down to 0:
        if arr[i+1] < arr[i]:
            rightSmaller[i] = arr[i+1]
        else:
            rightSmaller[i] = rightSmaller[i+1]
    
    // Find maximum absolute difference
    maxDiff = 0
    for i = 0 to n-1:
        currentDiff = |leftSmaller[i] - rightSmaller[i]|
        maxDiff = max(maxDiff, currentDiff)
    
    return maxDiff